<div id="wrapper">

  <div id="sidebar">
    <div id="widget" class="sticky">
      <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD1XEDHM32q1GBFywDICjLpca_f8EM9ZWs&callback=initMap"></script>


      <script>

      var map, popup, Popup;

        function initMap() {
          definePopupClass();

          var mapCanvas = document.getElementById('widget');
          var mapOptions = {
            <% if @arrRooms.length > 0 %>
              center: new google.maps.LatLng(<%= @arrRooms[0].latitude %>, <%= @arrRooms[0].longitude %>),
            <% else %>
              center: new google.maps.LatLng(33.744939, -84.389858),
            <% end %>
            zoom: 14,
            mapTypeId: google.maps.MapTypeId.ROADMAP
          }

          var map = new google.maps.Map(mapCanvas, mapOptions);

          <% @arrRooms.each do |room| %>
            // var marker = new google.maps.Marker({
            //   position: new google.maps.LatLng(<%= room.latitude %>, <%= room.longitude %>),
            //   title: "<%= room.listing_name %>",
            //
            // });
            //
            // marker.setMap(map);

            content: "<div id="content">$<%= room.price %></div>"

            popup = new Popup(
              new google.maps.LatLng(<%= room.latitude %>, <%= room.longitude %>),
              document.getElementById('content'));
            popup.setMap(map);
          <% end %>
        }

        /** Defines the Popup class. */
function definePopupClass() {
  /**
   * A customized popup on the map.
   * @param {!google.maps.LatLng} position
   * @param {!Element} content
   * @constructor
   * @extends {google.maps.OverlayView}
   */
  Popup = function(position, content) {
    this.position = position;

    content.classList.add('popup-bubble-content');

    var pixelOffset = document.createElement('div');
    pixelOffset.classList.add('popup-bubble-anchor');
    pixelOffset.appendChild(content);

    this.anchor = document.createElement('div');
    this.anchor.classList.add('popup-tip-anchor');
    this.anchor.appendChild(pixelOffset);

    // Optionally stop clicks, etc., from bubbling up to the map.
    this.stopEventPropagation();
  };
  // NOTE: google.maps.OverlayView is only defined once the Maps API has
  // loaded. That is why Popup is defined inside initMap().
  Popup.prototype = Object.create(google.maps.OverlayView.prototype);

  /** Called when the popup is added to the map. */
  Popup.prototype.onAdd = function() {
    this.getPanes().floatPane.appendChild(this.anchor);
  };

  /** Called when the popup is removed from the map. */
  Popup.prototype.onRemove = function() {
    if (this.anchor.parentElement) {
      this.anchor.parentElement.removeChild(this.anchor);
    }
  };

  /** Called when the popup needs to draw itself. */
  Popup.prototype.draw = function() {
    var divPosition = this.getProjection().fromLatLngToDivPixel(this.position);
    // Hide the popup when it is far out of view.
    var display =
      Math.abs(divPosition.x) < 4000 && Math.abs(divPosition.y) < 4000 ?
      'block' :
      'none';

    if (display === 'block') {
      this.anchor.style.left = divPosition.x + 'px';
      this.anchor.style.top = divPosition.y + 'px';
    }
    if (this.anchor.style.display !== display) {
      this.anchor.style.display = display;
    }
  };

  /** Stops clicks/drags from bubbling up to the map. */
  Popup.prototype.stopEventPropagation = function() {
    var anchor = this.anchor;
    anchor.style.cursor = 'auto';

    ['click', 'dblclick', 'contextmenu', 'wheel', 'mousedown', 'touchstart',
      'pointerdown'
    ]
    .forEach(function(event) {
      anchor.addEventListener(event, function(e) {
        e.stopPropagation();
      });
    });
  };
}





      </script>

    </div>
  </div>

  <div id="article">

    <div class="row">

      <div class="col-md-12">
      <%= search_form_for @search, url: search_path, remote: true do |f| %>

        <div class="row">
          <div class="col-md-3">
            <%= text_field_tag :start_date, params[:start_date], placeholder: "Start Date", class: "form-control" %>
          </div>
          <div class="col-md-3">
            <%= text_field_tag :end_date, params[:end_date], placeholder: "End Date", class: "form-control" %>
          </div>
          <div class="col-md-3">
            <%= f.text_field :price_gteq, placeholder: "Min Price", class: "form-control" %>
          </div>
          <div class="col-md-3">
            <%= f.text_field :price_lteq, placeholder: "Max Price", class: "form-control" %>
          </div>
        </div>

        <hr>

        <div class="row">
          <div class="col-md-4">
            <%= check_box_tag "q[room_type_eq_any][]", "Entire" %> Entire Room
          </div>
          <div class="col-md-4">
            <%= check_box_tag "q[room_type_eq_any][]", "Private" %> Private Room
          </div>
          <div class="col-md-4">
            <%= check_box_tag "q[room_type_eq_any][]", "Shared" %> Shared Room
          </div>
        </div>

        <hr>

        <div class="row">
          <div class="col-md-4">
            <div class="form-group">
              <label>Accommodate</label>
              <%= f.select :accommodate_gteq, [["1",1], ["2",2], ["3",3], ["4",4], ["5",5], ["6+",6]], prompt: "Select...", class: "form-control" %>
            </div>
          </div>

          <div class="col-md-4">
            <div class="form-group">
              <label>Bedrooms</label>
              <%= f.select :accommodate_gteq, [["1",1], ["2",2], ["3",3], ["4",4], ["5",5], ["6+",6]], prompt: "Select...", class: "form-control" %>
            </div>
          </div>

          <div class="col-md-4">
            <div class="form-group">
              <label>Bathrooms</label>
              <%= f.select :accommodate_gteq, [["1",1], ["2",2], ["3",3], ["4+",4]], prompt: "Select...", class: "form-control" %>
            </div>
          </div>
        </div>

        <hr>

        <div class="row">
          <div class="col-md-4">
            <%= check_box_tag "q[is_tv_eq]", true %> TV
          </div>
          <div class="col-md-4">
            <%= check_box_tag "q[is_kitchen_eq]", true %> Kitchen
          </div>
          <div class="col-md-4">
            <%= check_box_tag "q[is_internet_eq]", true %> Internet
          </div>
          <div class="col-md-4">
            <%= check_box_tag "q[is_heating_eq]", true %> Heating
          </div>
          <div class="col-md-4">
            <%= check_box_tag "q[is_air_eq]", true %> Air Conditioning
          </div>
        </div>

        <br>

        <div class="row">
          <%= f.submit "Search", class: "btn btn-primary" %>
        </div>

      <% end %>

      <hr>

      <div class="row" id="room_listing">
        <%= render partial: "rooms/rooms_list", locals: {rooms: @arrRooms} %>
      </div>

    </div>

    </div>

  </div>

</div>

<script>
  $(function() {
    $("#start_date").datepicker({
      dateFormat: 'dd-mm-yy',
      minDate: 0,
      maxDate: '3m',
      onSelect: function(selected) {
        $('#end_date').datepicker("option", "minDate", selected);
        $('#end_date').attr('disabled', false);
      }
    });

    $("#end_date").datepicker({
      dateFormat: 'dd-mm-yy',
      minDate: 0,
      maxDate: '3m',
      onSelect: function(selected) {
        $('#start_date').datepicker("option", "maxDate", selected);
      }
    });
  });
</script>
<div class="sticky-stopper"></div>
<script>
$( document ).ready(function() {
console.log( "document ready!" );

var $sticky = $('.sticky');
var $stickyrStopper = $('.sticky-stopper');
if (!!$sticky.offset()) { // make sure ".sticky" element exists

var generalSidebarHeight = $sticky.innerHeight();
var stickyTop = $sticky.offset().top;
var stickOffset = 0;
var stickyStopperPosition = $stickyrStopper.offset().top;
var stopPoint = stickyStopperPosition - generalSidebarHeight - stickOffset;
var diff = stopPoint + stickOffset;

$(window).scroll(function(){ // scroll event
var windowTop = $(window).scrollTop(); // returns number

if (stopPoint < windowTop) {
$sticky.css({ position: 'absolute', top: diff });
} else if (stickyTop < windowTop+stickOffset) {
$sticky.css({ position: 'fixed', top: stickOffset });
} else {
$sticky.css({position: 'absolute', top: 'initial'});
}
});

}
});
</script>
